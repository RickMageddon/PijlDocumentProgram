name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact-name: PortfolioManager-windows
            platform: windows
            extension: .exe
            icon: icon.ico
          - os: macos-latest
            artifact-name: PortfolioManager-darwin
            platform: darwin
            extension: ""
            icon: icon.png
          - os: ubuntu-latest
            artifact-name: PortfolioManager-linux
            platform: linux
            extension: ""
            icon: icon.png

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libappindicator3-dev \
          librsvg2-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libatk1.0-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name ${{ matrix.artifact-name }} --icon=${{ matrix.icon }} main_flet.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: dist/${{ matrix.artifact-name }}${{ matrix.extension }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded files (debug)
      run: |
        echo "Downloaded artifacts:"
        find artifacts -type f -name "*" -exec ls -la {} \; || echo "No files found"
        echo "Directory structure:"
        ls -la artifacts/ || echo "No artifacts directory"

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/PortfolioManager-windows/PortfolioManager-windows.exe
          artifacts/PortfolioManager-darwin/PortfolioManager-darwin
          artifacts/PortfolioManager-linux/PortfolioManager-linux
        body: |
          ## üéâ Portfolio Document Manager v1.5.0

          ### ‚ú® Major Updates - Flet UI Overhaul

          This release marks a complete transition from Tkinter to **Flet** for a modern, responsive user interface!

          ### üöÄ New Features

          - **üåê Multilingual Support**: Complete Dutch/English language switching with flag dropdown
          - **üé® Modern Flet UI**: Completely rewritten interface using Google's Flet framework
          - **üåô Dark/Light Mode**: Toggle between light and dark themes
          - **üì± Responsive Design**: Better layout that adapts to different screen sizes
          - **üñ±Ô∏è Improved UX**: Centered layouts, better spacing, and professional appearance
          - **‚ö° Real-time Language Switching**: UI updates immediately when switching languages
          - **üîÑ Enhanced Navigation**: Improved menu structure with dropdown organization

          ### üõ†Ô∏è Technical Improvements

          - **Complete Flet Migration**: Moved from Tkinter to Flet for modern web-based UI
          - **Translation System**: Comprehensive `get_text()` system for all UI elements
          - **Better State Management**: Improved data handling and UI updates
          - **Cross-platform Compatibility**: Better support for Windows, macOS, and Linux
          - **GitHub Actions**: Automated building and releasing for all platforms

          ### üìã Enhanced Features

          - **Portfolio Management**: Add, edit, and manage portfolio items with ease
          - **Feedback System**: Comprehensive feedback tracking per learning outcome
          - **Document Generation**: PDF and Markdown export with proper formatting
          - **Learning Outcomes Info**: Detailed information about all learning outcomes
          - **Student Info Management**: Easy student data configuration

          ### üêõ Bug Fixes

          - Fixed date handling for portfolio items
          - Improved error handling and validation
          - Better form validation and user feedback
          - Resolved document generation issues
          - Fixed attention card width consistency

          ### üì¶ Download

          Choose the version for your operating system:
          - **Windows**: `PortfolioManager-windows.exe`
          - **macOS**: `PortfolioManager-darwin`
          - **Linux**: `PortfolioManager-linux`

          ### üîß Installation

          1. Download the appropriate executable for your platform
          2. Run the executable (no installation required)
          3. Fill in your student information on first launch
          4. Start managing your portfolio!

          ### üíª Development

          This version uses **main_flet.py** as the primary entry point. The legacy Tkinter version (`main.py`) is now deprecated.

          ---

          **Full Changelog**: https://github.com/RickMageddon/PijlDocumentProgram/compare/v1.4.0...v1.5.0
        draft: false
        prerelease: false
        fail_on_unmatched_files: false
        token: ${{ secrets.GITHUB_TOKEN }}
